	.section	.rodata
	.int_wformat: .string "%d\n"
	.str_wformat: .string "%s\n"
	.int_rformat: .string "%d"
	.comm _gp, 44, 4
	.text
	.globl main
	.type main,@function
main:	nop
	pushq %rbp
	movq %rsp, %rbp
	movq $_gp,%rbx
	addq $0, %rbx
	movl $0, %ecx
	movl %ecx, (%rbx)
.L2:
	movq $_gp,%rcx
	addq $0, %rcx
reg = r8d
	movl (%rcx), %r8d
	movl $10, %ecx
	movl %r8d, %eax
	movl %ecx, %r9d
	cmpl  %r9d, %eax
	movl $0, %r9d
	movl $1, %eax
	cmovl %eax, %r9d
	movl %r9d, %r8d
	movl $0, %eax
	cmpl %eax, %r8d
	je .L1
	movq $_gp,%rcx
	addq $4, %rcx
	movq $_gp,%r8
	addq $0, %r8
reg = r9d
	movl (%r8), %r9d
	imull $4, %r9d
	movslq %r9d, %r9
	addq %r9, %rcx
	movq $_gp,%r8
	addq $0, %r8
reg = r10d
	movl (%r8), %r10d
	movq $_gp,%r8
	addq $0, %r8
reg = r11d
	movl (%r8), %r11d
	imull %r11d, %r10d
	movl %r10d, (%rcx)
	movq $_gp,%rcx
	addq $0, %rcx
	movq $_gp,%r8
	addq $0, %r8
reg = r10d
	movl (%r8), %r10d
	movl $1, %r8d
	addl %r8d, %r10d
	movl %r10d, (%rcx)
	jmp .L2
.L1:	nop
	leave
	ret
