	.section	.rodata
	.int_wformat: .string "%d\n"
	.str_wformat: .string "%s\n"
	.int_rformat: .string "%d"
	.comm _gp, 48, 4
	.text
	.globl t
	.type t,@function
t:	nop
	pushq %rbp
	movq %rsp, %rbp
	subq $48, %rsp
	movq %rbp,%rbx
	subq $48, %rbx
	movl $3, %ecx
	imull $4, %ecx
	movslq %ecx, %rcx
	addq %rcx, %rbx
	movl $1, %r8d
	movl %r8d, (%rbx)
	movq %rbp,%rbx
	subq $48, %rbx
	movl $3, %r8d
	imull $4, %r8d
	movslq %r8d, %r8
	addq %r8, %rbx
	movl (%rbx), %r9d
	movl %r9d, %eax
	movq %rbp, %rsp
	popq %rbp
	ret
	.globl main
	.type main,@function
main:	nop
	pushq %rbp
	movq %rsp, %rbp
	movq $_gp,%rbx
	addq $0, %rbx
	movl $1, %r8d
	movl %r8d, (%rbx)
.L2:
	movq $_gp,%r8
	addq $0, %r8
	movl (%r8), %r9d
	movl $11, %r8d
	movl %r9d, %eax
	movl %r8d, %r10d
	cmpl  %r10d, %eax
	movl $0, %r10d
	movl $1, %eax
	cmovl %eax, %r10d
	movl %r10d, %r9d
	movl $0, %eax
	cmpl %eax, %ebx
	je .L1
	movq $_gp,%rbx
	addq $4, %rbx
	movq $_gp,%r8
	addq $0, %r8
	movl (%r8), %r10d
	imull $4, %r10d
	movslq %r10d, %r10
	addq %r10, %rbx
	movq $_gp,%r8
	addq $0, %r8
	movl (%r8), %r11d
	movl %r11d, (%rbx)
	movq $_gp,%rbx
	addq $0, %rbx
	movq $_gp,%r8
	addq $0, %r8
	movl (%r8), %r11d
	movl $1, %r8d
	addl %r8d, %r11d
	movl %r11d, (%rbx)
	jmp .L2
.L1:
	movq $_gp,%rbx
	addq $0, %rbx
	push %rbx
	call t
	pop %rbx
	movl %eax, (%rbx)
	movq $_gp,%rbx
	addq $0, %rbx
	movl (%rbx), %r8d
	movl %r8d, %esi
	movl $0, %eax
	movl $.int_wformat, %edi
	call printf
	leave
	ret
